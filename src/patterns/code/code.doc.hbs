---
title: Code
---

<p>The code pattern is used to display example code on pages, for example in documentation such as the digital pattern library or in blog post tutorials demonstrating how to do something.</p>

<p>This pattern uses the <a href="https://highlightjs.org/">highlight.js</a> library to automatically add syntax highlighting to code.</p>

<p>You do not need to first encode the source code, the digital pattern library will do this automatically.</p>

<p>You must wrap code using the following syntax:</p>

<span class="label label-default">Code</span>
<pre><code class="pattern-source html">{{> code code-options}}</code></pre>

<h3>Supported languages</h3>

<p>The following languages are currently supported:</p>

<ul>
    <li>HTML (html)</li>
    <li>CSS (css)</li>
    <li>JavaScript (javascript)</li>
    <li>JSON (json)</li>
    <li>PHP (php)</li>
</ul>


<h3>Examples</h3>

<h4>HTML</h4>
<p>Add class of <code>html</code>.</p>
<span class="label label-info">Example</span>
<pre><code class="pattern-source html"><p class="something">This is an example page.</p>
</code></pre>

<hr>
<h4>CSS</h4>
<p>Add class of <code>css</code>.</p>
<span class="label label-info">Example</span>
<pre><code class="pattern-source css">pre, pre code.pattern-source {
    background-color: #23241f;
}
pre {
    max-height: 14em;
    overflow: auto;
}
</code></pre>

<hr>
<h4>JavaScript</h4>
<p>Add class of <code>javascript</code>.</p>
<span class="label label-info">Example</span>
<pre><code class="pattern-source javascript">function $initHighlight(block, cls) {
  try {
    if (cls.search(/\bno\-highlight\b/) != -1)
      return process(block, true, 0x0F) +
             ` class="${cls}"`;
  } catch (e) {
    /* handle exception */
  }
  for (var i = 0 / 2; i < classes.length; i++) {
    if (checkCondition(classes[i]) === undefined)
      console.log('undefined');
  }
}

export  $initHighlight;
</code></pre>

<hr>
<h4>JSON</h4>
<p>Add class of <code>json</code>.</p>

<span class="label label-info">Example</span>
<pre><code class="pattern-source json">
[
  {
    "title": "apples",
    "count": [12000, 20000],
    "description": {"text": "...", "sensitive": false}
  },
  {
    "title": "oranges",
    "count": [17500, null],
    "description": {"text": "...", "sensitive": false}
  }
]
</code></pre>